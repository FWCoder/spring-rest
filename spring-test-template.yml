apiVersion: v1
kind: Template
labels:
  template: spring-test
metadata:
  annotations:
    description: Application template for spring Test application
    iconClass: icon-tomcat
    tags: java,spring
    version: 1.2.0
  name: spring-test
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${NAMESPACE}
  spec:
    ports:
      - port: 8080
        targetport: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${NAMESPACE}
  spec:
    # paused: ${{PAUSE_TRIGGER}}
    replicas : ${{REPLICA_COUNT}}
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: PERSON_NAME
            valueFrom:
              secretKeyRef:
                name: ${APPLICATION_NAME}
                key: name
          - name: JAVA_TOOL_OPTIONS 
            value: "-Dperson.name=${PERSON_NAME}"
          - name: SETUP_CONDITION
            value: "true"
          image: ${DOCKER_IMAGE}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          #readinessProbe:
          #  httpGet:
          #    path: /readiness
          #    port: 8080
          #  initialDelaySeconds: 30
          #  timeoutSeconds: 1
          #livenessProbe:
          #  httpGet:
          #    path: /liveliness
          #    port: 8080
          #  initialDelaySeconds: 30
          #  timeoutSeconds: 1
          volumeMounts:
          - mountPath: /logs
            name: log-volume
          - name: secret-volume
            mountPath: /etc/secret-volume
            readOnly: true
          #resources:
          #  requests:
          #    memory: ${{INITIAL_MEMORY_IN_MB}}
          #    cpu: ${{INITIAL_CPU_CORES}}
          #  limits:
          #    memory: ${{MAX_MEMORY_IN_MB}}
          #    cpu: ${{MAX_CPU_CORES}}
        volumes:
        - name: log-volume
          emptyDir: {}
        - name: secret-volume
          secret:
            secretName: ${APPLICATION_NAME}
     
    triggers:
    - imageChangeParams:
        automatic: ${{PAUSE_TRIGGER}}
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: spring-test
- description: The namespace to deploy into
  name: NAMESPACE
  required: true
  value: myproject
- description: The docker image host
  name: HOST
  required: false
  value: 172.30.1.1
- description: The docker image port
  name: PORT
  required: false
  value: '5000'
- description: The docker image url
  name: DOCKER_IMAGE
  required: true
  value: 172.30.1.1:5000/myproject/spring-test
- description: enable/disable spring test
  name: PAUSE_TRIGGER
  required: false
  value: 'true'
- description: The number of replicas you need of your application      
  displayName: Replica count
  name: REPLICA_COUNT
  required: false
  value: '1' 
- description: Initial memory to each POD that will run your application. Note that this is NOT the JAVA_OPTS value
  displayName: Initial Memory
  name: INITIAL_MEMORY_IN_MB
  required: false
  value: 2048Mi
- description: Maximum memory to each POD that will run your application. Note that this is NOT the JAVA_OPTS value
  displayName: Maximum Memory
  name: MAX_MEMORY_IN_MB
  required: false
  value: 4096Mi
- description: Initial CPU cores allocated to each POD
  displayName: Initial CPU Cores
  name: INITIAL_CPU_CORES
  required: false
  value: '2'
- description: Maximum CPU cores allocated to each POD before they are terminated
  displayName: Maximum CPU Cores
  name: MAX_CPU_CORES
  required: false
  value: '4'
